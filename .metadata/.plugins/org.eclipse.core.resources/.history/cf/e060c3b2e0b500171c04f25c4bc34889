import edu.princeton.cs.algs4.MaxPQ;

public class PQTester {

    public static void main (String[] args) {
        for (int n = 100; n < 1000000; n*=10) {
            int j;
            long running = 0;
            for (j = 1; j < 20; j++) {
                long start = System.nanoTime();
                MaxPQ<Integer> q = new MaxPQ<Integer>();
                randomFill(q, n);
                remove(q, q.size()/2);
                randomFill(q, n);
                remove(q, q.size());
                running += System.nanoTime() - start;
            }
            System.out.println(n + "\t" + running/(double)j/1000000);
        }
    }
    
    private static void randomFill(MaxPQ<Integer> q, int n) {
        for (int i = 0; i < n; i++)
            q.insert(StdRandom.uniform(1000000, 10000000));
    }
    
    private static void remove(MaxPQ<Integer> q, int num) {
        for (int i = 0; i < num; i++)
            q.delMax();
    }
}
