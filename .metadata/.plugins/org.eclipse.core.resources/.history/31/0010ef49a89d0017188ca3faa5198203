
public class PercolationStats {

    private double T;
    private double[] thresholds;
    
    
    public PercolationStats(int N, int T) {
        if (N <= 0 || T <= 0) throw new IllegalArgumentException("N and T must be positive integers.");
        thresholds = new double[T];
        for (int i = 0; i < T; i++) {
            Percolation perc = new Percolation(N);
            int count = 0;
            while (!perc.percolates()) {
                perc.open(StdRandom.uniform(0, N-1), StdRandom.uniform(0, N-1));
                count++;
            }
            thresholds[i] = (double)count/N;
        }
    }
    
    public double mean() {
        double total = 0.0;
        for (double p: thresholds) 
            total += p;
        return total/T;
    }
    
    public double stddev() {
        double mean = mean();
        double numerator = 0.0;
        for (int i = 0; i < T; i++)
            numerator += (Math.pow(thresholds[i] - mean, 2));
        return Math.sqrt(numerator/(T-1));
    }
    
    public double confidenceLow() {
        double mean = mean(),
               stddev = stddev();
        
        
    }
    
    public double confidenceHigh() {
        
    }
}